apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.example.gsyplayersam"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions.includeCompileClasspath = true
        }

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }
    }
    signingConfigs {
        releaseConfig {
            storeFile file("../debug.jks")
            storePassword "123456"
            keyAlias "debug"
            keyPassword "123456"
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def viewDependencies = rootProject.ext.viewDependencies
    def androidDependencies = rootProject.ext.androidDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    annotationProcessor viewDependencies.apt_butterKnife
    implementation viewDependencies.butterKnife
    implementation androidDependencies.recyclerView
    implementation viewDependencies.DanmakuFlameMaster
    implementation viewDependencies.glide
    implementation viewDependencies.glideProcessor
    implementation androidDependencies.support_v4
    implementation androidDependencies.design

    implementation(dataDependencies.permissionsdispatcher) {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }
    annotationProcessor dataDependencies.permissionsdispatcherProcessor

    implementation project(':gsyVideoPlayer')

    implementation viewDependencies.ndkbitmap_armv7a
    implementation viewDependencies.ndkbitmap_armv5
    implementation viewDependencies.ndkbitmap_x86

    implementation dataDependencies.okhttpUtil
    implementation dataDependencies.okhttp
}

